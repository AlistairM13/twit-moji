import Head from "next/head";
import { useUser } from '@clerk/nextjs'
import { SignInButton, SignOutButton } from "@clerk/nextjs";
import { RouterOutputs, api } from "~/utils/api";
import Image from "next/image";
import dayjs from "dayjs"
import relativeTime from "dayjs/plugin/relativeTime"
import { LoadingPage } from "~/components/loading";
import { useState } from "react";

dayjs.extend(relativeTime)

const CreatePostWizard = () => {
  const { user } = useUser()
  const [input, setInput] = useState("")

  const ctx = api.useContext()

  const { mutate, isLoading: isPosting } = api.posts.create.useMutation({
    onSuccess: () => {
      setInput("")
      void ctx.posts.getAll.invalidate();
    }
  })

  if (!user) return null

  return <div className="w-full flex gap-3">
    <Image
      src={user.profileImageUrl}
      alt="Profile Image"
      className="w-14 h-14 rounded-full"
      width={56}
      height={56}
    />
    <input
      placeholder="Type some emojis..."
      className="bg-transparent grow outline-none"
      type="text"
      value={input}
      onChange={e => setInput(e.target.value)}
      disabled={isPosting}
    />
    <button onClick={() => mutate({ content: input })}>Post</button>
  </div>
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number]
const PostView = (props: PostWithUser) => {
  const { post, author } = props
  return (
    <div key={post.id} className="p-4 border-b border-slate-400 flex gap-3">
      <Image
        src={author.profileImageUrl}
        alt={`${author.firstName}'s profile picture`}
        className="w-14 h-14 rounded-full"
        width={56}
        height={56}
      />
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-300">
          <span>{`@${author.firstName}`}</span>
          <span className="font-thin text-slate-400">{`Â· ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span className="text-2xl">{post.content}</span>
      </div>
    </div>
  )
}


const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery()
  if (postsLoading) return <LoadingPage />

  if (!data) return <div>Something went wrong</div>

  return (
    <div className="flex flex-col">
      {data.map((fullPost) =>
        <PostView {...fullPost} key={fullPost.post.id} />
      )}
    </div>
  )


}

export default function Home() {

  const { isLoaded: userLoaded, isSignedIn } = useUser()
  // Fetch posts asap
  api.posts.getAll.useQuery()
  if (!userLoaded) return <div /> // return empty div if user isnt loaded

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="h-screen flex justify-center">
        <div className="w-full md:max-w-2xl border-x border-slate-400">
          <div className="border-b border-slate-400 p-4">
            {!isSignedIn && <div className="flex justify-center"><SignInButton /></div>}
            {isSignedIn && <CreatePostWizard />}
          </div>
          <Feed />
        </div>
      </main>
    </>
  )
}